{"version":3,"file":"module.js","sources":["../../src/scripts/constants.js","../../src/scripts/lazymoney-helpers.js","../../src/scripts/lib/lib.js","../../src/scripts/settings.js","../../src/scripts/api.js","../../src/scripts/lazymoney.js","../../src/scripts/main.js","../../src/module.js"],"sourcesContent":["const CONSTANTS = {\n  MODULE_NAME: \"lazymoney\",\n  MODULE_ID: \"lazymoney\",\n  PATH: `modules/lazymoney/`,\n};\n\nCONSTANTS.PATH = `modules/${CONSTANTS.MODULE_NAME}/`;\n\nexport default CONSTANTS;\n","import { debug, info, isEmptyObject, is_lazy_number, is_real_number, log, warn, getActor } from \"./lib/lib.js\";\nimport CONSTANTS from \"./constants.js\";\n\nexport class LazyMoneyHelpers {\n  async manageCurrency(actorOrActorUuid, currencyValue, currencyDenom) {\n    let sign = LazyMoneyHelpers.signCase.default;\n    for (const val of Object.values(LazyMoneyHelpers.signCase)) {\n      if (value.includes(val)) {\n        sign = val;\n        break;\n      }\n    }\n    const actor = getActor(actorOrActorUuid);\n    const newAmount = LazyMoneyHelpers.calculateNewAmount(actor, currencyValue, currencyDenom, sign);\n    actor.update({ \"system.currency\": newAmount });\n  }\n\n  static async addCurrency(actorOrActorUuid, currencyValue, currencyDenom) {\n    const actor = getActor(actorOrActorUuid);\n    const newAmount = LazyMoneyHelpers.calculateNewAmount(\n      actor,\n      currencyValue,\n      currencyDenom,\n      LazyMoneyHelpers.signCase.add\n    );\n    actor.update({ \"system.currency\": newAmount });\n  }\n\n  static async subtractCurrency(actorOrActorUuid, currencyValue, currencyDenom) {\n    const actor = getActor(actorOrActorUuid);\n    const newAmount = LazyMoneyHelpers.calculateNewAmount(\n      actor,\n      currencyValue,\n      currencyDenom,\n      LazyMoneyHelpers.signCase.subtract\n    );\n    actor.update({ \"system.currency\": newAmount });\n  }\n\n  /* =============================================== */\n\n  static convertToGold(currencyValue, currencyDenom) {\n    return LazyMoneyHelpers.recalcItemPriceValue(currencyValue, currencyDenom).gold;\n  }\n\n  static convertToSilver(currencyValue, currencyDenom) {\n    return LazyMoneyHelpers.recalcItemPriceValue(currencyValue, currencyDenom).silver;\n  }\n\n  static convertToCopper(currencyValue, currencyDenom) {\n    return LazyMoneyHelpers.recalcItemPriceValue(currencyValue, currencyDenom).copper;\n  }\n\n  static convertToElectrum(currencyValue, currencyDenom) {\n    return LazyMoneyHelpers.recalcItemPriceValue(currencyValue, currencyDenom).electrum;\n  }\n\n  static convertToPlatinum(currencyValue, currencyDenom) {\n    return LazyMoneyHelpers.recalcItemPriceValue(currencyValue, currencyDenom).platinum;\n  }\n  /* =============================================== */\n\n  static signCase = {\n    add: \"+\",\n    subtract: \"-\",\n    equals: \"=\",\n    default: \" \",\n  };\n\n  static currencyDenomCase = {\n    cp: \"cp\",\n    sp: \"sp\",\n    ep: \"ep\",\n    gp: \"gp\",\n    pp: \"pp\",\n  };\n\n  /* ============================================ */\n  /* PRIVATE FUNCTIONS */\n  /* ============================================ */\n\n  static patchCurrency(currency) {\n    if (hasProperty(currency, \"pp\")) {\n      let ppValue = getProperty(currency, \"pp\") || 0;\n      if (!is_lazy_number(ppValue)) {\n        // Do nothing\n      }\n      // Module compatibility with https://foundryvtt.com/packages/link-item-resource-5e\n      else if (String(ppValue).startsWith(\"0\") && String(ppValue) !== \"0\") {\n        while (String(ppValue).startsWith(\"0\")) {\n          if (String(ppValue) === \"0\") {\n            break;\n          }\n          ppValue = String(ppValue).slice(1);\n        }\n      }\n      if (!is_real_number(ppValue)) {\n        ppValue = 0;\n      }\n      if (getProperty(currency, \"pp\") !== ppValue) {\n        setProperty(currency, \"pp\", Number(ppValue ?? 0));\n        info(`patchCurrency | update pp from '${getProperty(currency, \"pp\")}' to '${ppValue}'`);\n      }\n    }\n    if (hasProperty(currency, \"gp\")) {\n      let gpValue = getProperty(currency, \"gp\") || 0;\n      if (!is_lazy_number(gpValue)) {\n        // Do nothing\n      }\n      // Module compatibility with https://foundryvtt.com/packages/link-item-resource-5e\n      else if (String(gpValue).startsWith(\"0\") && String(gpValue) !== \"0\") {\n        while (String(gpValue).startsWith(\"0\")) {\n          if (String(gpValue) === \"0\") {\n            break;\n          }\n          gpValue = String(gpValue).slice(1);\n        }\n      }\n      if (!is_real_number(gpValue)) {\n        gpValue = 0;\n      }\n      if (getProperty(currency, \"gp\") !== gpValue) {\n        setProperty(currency, \"gp\", Number(gpValue ?? 0));\n        info(`patchCurrency | update gp from '${getProperty(currency, \"gp\")}' to '${gpValue}'`);\n      }\n    }\n    if (hasProperty(currency, \"ep\")) {\n      let epValue = getProperty(currency, \"ep\") || 0;\n      if (!is_lazy_number(epValue)) {\n        // Do nothing\n      }\n      // Module compatibility with https://foundryvtt.com/packages/link-item-resource-5e\n      else if (String(epValue).startsWith(\"0\") && String(epValue) !== \"0\") {\n        while (String(epValue).startsWith(\"0\")) {\n          if (String(epValue) === \"0\") {\n            break;\n          }\n          epValue = String(epValue).slice(1);\n        }\n      }\n      if (!is_real_number(epValue)) {\n        epValue = 0;\n      }\n      if (getProperty(currency, \"ep\") !== epValue) {\n        setProperty(currency, \"ep\", Number(epValue ?? 0));\n        info(`patchCurrency | update ep from '${getProperty(currency, \"ep\")}' to '${epValue}'`);\n      }\n    }\n    if (hasProperty(currency, \"sp\")) {\n      let spValue = getProperty(currency, \"sp\") || 0;\n      if (!is_lazy_number(spValue)) {\n        // Do nothing\n      }\n      // Module compatibility with https://foundryvtt.com/packages/link-item-resource-5e\n      else if (String(spValue).startsWith(\"0\") && String(spValue) !== \"0\") {\n        while (String(spValue).startsWith(\"0\")) {\n          if (String(spValue) === \"0\") {\n            break;\n          }\n          spValue = String(spValue).slice(1);\n        }\n      }\n      if (!is_real_number(spValue)) {\n        spValue = 0;\n      }\n      if (getProperty(currency, \"sp\") !== spValue) {\n        setProperty(currency, \"sp\", Number(spValue ?? 0));\n        info(`patchCurrency | update sp from '${getProperty(currency, \"sp\")}' to '${spValue}'`);\n      }\n    }\n    if (hasProperty(currency, \"cp\")) {\n      let cpValue = getProperty(currency, \"cp\") || 0;\n      if (!is_lazy_number(cpValue)) {\n        // Do nothing\n      }\n      // Module compatibility with https://foundryvtt.com/packages/link-item-resource-5e\n      else if (String(cpValue).startsWith(\"0\") && String(cpValue) !== \"0\") {\n        while (String(cpValue).startsWith(\"0\")) {\n          if (String(cpValue) === \"0\") {\n            break;\n          }\n          cpValue = String(cpValue).slice(1);\n        }\n      }\n      if (!is_real_number(cpValue)) {\n        cpValue = 0;\n      }\n      if (getProperty(currency, \"cp\") !== cpValue) {\n        setProperty(currency, \"cp\", Number(cpValue ?? 0));\n        info(`patchCurrency | update cp from '${getProperty(currency, \"cp\")}' to '${cpValue}'`);\n      }\n    }\n    return currency;\n  }\n\n  static calculateNewAmount(actor, valueS, denom, sign) {\n    if (!actor) {\n      throw error(`No actor is been passed`, true);\n    }\n\n    if (isEmptyObject(valueS)) {\n      throw error(`The currency value is empty or null`, true);\n    }\n\n    let money = actor.system.currency;\n    money = LazyMoneyHelpers.patchCurrency(money);\n\n    let value = String(valueS);\n\n    let isValidCurrencyDenom = false;\n    for (const val of Object.values(LazyMoneyHelpers.currencyDenomCase)) {\n      if (denom === val) {\n        isValidCurrencyDenom = true;\n        break;\n      }\n    }\n    if (!isValidCurrencyDenom) {\n      throw error(`The currency denomination '${this.currencyDenomCase}' is not valid`, true);\n    }\n\n    const splitVal = value.split(sign);\n    let delta;\n    if (splitVal.length > 1) {\n      delta = Number(splitVal[1]);\n    } else {\n      delta = Number(splitVal[0]);\n      LazyMoneyHelpers.chatLog(\n        actor,\n        `${game.user?.name} on ${actor.name} has replaced ${money[denom]} ${denom} with ${delta} ${denom}.`\n      );\n      return;\n    }\n    let newAmount = {};\n    if (!(denom === \"ep\" && game.settings.get(CONSTANTS.MODULE_ID, \"ignoreElectrum\"))) {\n      switch (sign) {\n        case LazyMoneyHelpers.signCase.add: {\n          newAmount = LazyMoneyHelpers.addMoney(money, delta, denom);\n          LazyMoneyHelpers.chatLog(actor, `${game.user?.name} on ${actor.name} has added ${delta} ${denom}.`);\n          break;\n        }\n        case LazyMoneyHelpers.signCase.subtract: {\n          newAmount = LazyMoneyHelpers.removeMoney(money, delta, denom);\n          LazyMoneyHelpers.chatLog(actor, `${game.user?.name} on ${actor.name} has removed ${delta} ${denom}.`);\n          if (!newAmount) {\n            // flash(input);\n            newAmount = money;\n          }\n          break;\n        }\n        case LazyMoneyHelpers.signCase.equals: {\n          newAmount = LazyMoneyHelpers.updateMoney(money, delta, denom);\n          LazyMoneyHelpers.chatLog(\n            actor,\n            `${game.user?.name} on ${actor.name} has replaced ${money[denom]} ${denom} with ${delta} ${denom}.`\n          );\n          break;\n        }\n        default: {\n          newAmount = LazyMoneyHelpers.updateMoney(money, delta, denom);\n          LazyMoneyHelpers.chatLog(\n            actor,\n            `${game.user?.name} on ${actor.name} has replaced ${money[denom]} ${denom} with ${delta} ${denom}.`\n          );\n          break;\n        }\n      }\n    } else {\n      switch (sign) {\n        case LazyMoneyHelpers.signCase.add: {\n          newAmount[denom] = money[denom] + delta;\n          LazyMoneyHelpers.chatLog(actor, `${game.user?.name} on ${actor.name} has added ${delta} ${denom}.`);\n          break;\n        }\n        case LazyMoneyHelpers.signCase.subtract: {\n          newAmount[denom] = money[denom] - delta;\n          LazyMoneyHelpers.chatLog(actor, `${game.user?.name} on ${actor.name} has removed ${delta} ${denom}.`);\n          break;\n        }\n        case LazyMoneyHelpers.signCase.equals: {\n          newAmount[denom] = money[denom];\n          LazyMoneyHelpers.chatLog(\n            actor,\n            `${game.user?.name} on ${actor.name} has replaced ${money[denom]} ${denom} with ${delta} ${denom}.`\n          );\n          break;\n        }\n        default: {\n          newAmount[denom] = money[denom];\n          LazyMoneyHelpers.chatLog(\n            actor,\n            `${game.user?.name} on ${actor.name} has replaced ${money[denom]} ${denom} with ${delta} ${denom}.`\n          );\n          break;\n        }\n      }\n    }\n    return newAmount;\n  }\n\n  static chatLog(actor, money) {\n    debug(`chatlog | money: ${money}`);\n    if (game.settings.get(CONSTANTS.MODULE_ID, \"chatLog\")) {\n      const msgData = {\n        content: money,\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\n        whisper: ChatMessage.getWhisperRecipients(\"GM\"),\n      };\n      return ChatMessage.create(msgData);\n    } else {\n      return undefined;\n    }\n  }\n\n  static getCpValue() {\n    let cpValue = {};\n    if (game.modules.get(\"world-currency-5e\")?.active) {\n      const ignorePP = game.settings.get(\"world-currency-5e\", \"ppAltRemove\");\n      const ignoreGP = game.settings.get(\"world-currency-5e\", \"gpAltRemove\");\n      const ignoreEP = game.settings.get(\"world-currency-5e\", \"epAltRemove\");\n      const ignoreSP = game.settings.get(\"world-currency-5e\", \"spAltRemove\");\n      const ignoreCP = game.settings.get(\"world-currency-5e\", \"cpAltRemove\");\n      let gpConvertb = game.settings.get(\"world-currency-5e\", \"gpConvert\");\n      if (!is_real_number(gpConvertb)) {\n        gpConvertb = 1;\n      } else {\n        gpConvertb = gpConvertb;\n      }\n      let ppConvertb = game.settings.get(\"world-currency-5e\", \"ppConvert\");\n      if (!is_real_number(ppConvertb)) {\n        ppConvertb = 0.1;\n      } else {\n        if (ppConvertb >= 1) {\n          ppConvertb = gpConvertb / ppConvertb;\n        } else {\n          ppConvertb = gpConvertb * ppConvertb;\n        }\n      }\n      let epConvertb = game.settings.get(\"world-currency-5e\", \"epConvert\");\n      if (!is_real_number(epConvertb)) {\n        epConvertb = 5;\n      } else {\n        if (epConvertb >= 1) {\n          epConvertb = gpConvertb * epConvertb;\n        } else {\n          epConvertb = gpConvertb / epConvertb;\n        }\n      }\n      let spConvertb = game.settings.get(\"world-currency-5e\", \"spConvert\");\n      if (!is_real_number(spConvertb)) {\n        spConvertb = 10;\n      } else {\n        if (spConvertb >= 1) {\n          spConvertb = gpConvertb * spConvertb;\n        } else {\n          spConvertb = gpConvertb / spConvertb;\n        }\n      }\n      let cpConvertb = game.settings.get(\"world-currency-5e\", \"cpConvert\");\n      if (!is_real_number(cpConvertb)) {\n        cpConvertb = 100;\n      } else {\n        if (cpConvertb >= 1) {\n          cpConvertb = gpConvertb * cpConvertb;\n        } else {\n          cpConvertb = gpConvertb / cpConvertb;\n        }\n      }\n      // Reconvert gold calculation to copper calculation\n      const ppConvert = (gpConvertb / ppConvertb) * cpConvertb;\n      const gpConvert = gpConvertb * cpConvertb;\n      const epConvert = (gpConvertb / epConvertb) * cpConvertb;\n      const spConvert = (gpConvertb / spConvertb) * cpConvertb;\n      const cpConvert = 1;\n      if (ignorePP && ignoreGP && ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {};\n      }\n      if (ignorePP && ignoreGP && ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          cp: { value: cpConvert, up: \"\", down: \"\" },\n        };\n      }\n      if (ignorePP && ignoreGP && ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          sp: { value: cpConvert, up: \"\", down: \"\" },\n        };\n      }\n      if (ignorePP && ignoreGP && ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          sp: { value: spConvert, up: \"\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (ignorePP && ignoreGP && !ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          ep: { value: cpConvert, up: \"\", down: \"\" },\n        };\n      }\n      if (ignorePP && ignoreGP && !ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          ep: { value: epConvert, up: \"\", down: \"sp\" },\n          cp: { value: cpConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (ignorePP && ignoreGP && !ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          ep: { value: epConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (ignorePP && ignoreGP && !ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          ep: { value: epConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"gp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"gp\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"gp\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"gp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && !ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && !ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && !ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (ignorePP && !ignoreGP && !ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          gp: { value: gpConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: cpConvert, up: \"\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"pp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"pp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"sp\" },\n          sp: { value: spConvert, up: \"pp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && !ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"pp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && !ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"pp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && !ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"pp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (!ignorePP && ignoreGP && !ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"ep\" },\n          ep: { value: epConvert, up: \"pp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"gp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"gp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"gp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && !ignoreEP && ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && !ignoreEP && ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && !ignoreEP && !ignoreSP && ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"\" },\n        };\n      }\n      if (!ignorePP && !ignoreGP && !ignoreEP && !ignoreSP && !ignoreCP) {\n        cpValue = {\n          pp: { value: ppConvert, up: \"\", down: \"gp\" },\n          gp: { value: gpConvert, up: \"pp\", down: \"ep\" },\n          ep: { value: epConvert, up: \"gp\", down: \"sp\" },\n          sp: { value: spConvert, up: \"ep\", down: \"cp\" },\n          cp: { value: cpConvert, up: \"sp\", down: \"\" },\n        };\n      }\n    } else {\n      if (game.settings.get(CONSTANTS.MODULE_ID, \"ignoreElectrum\")) {\n        cpValue = {\n          pp: { value: 1000, up: \"\", down: \"gp\" },\n          gp: { value: 100, up: \"pp\", down: \"sp\" },\n          sp: { value: 10, up: \"gp\", down: \"cp\" },\n          cp: { value: 1, up: \"sp\", down: \"\" },\n        };\n      } else {\n        cpValue = {\n          pp: { value: 1000, up: \"\", down: \"gp\" },\n          gp: { value: 100, up: \"pp\", down: \"ep\" },\n          ep: { value: 50, up: \"gp\", down: \"sp\" },\n          sp: { value: 10, up: \"ep\", down: \"cp\" },\n          cp: { value: 1, up: \"sp\", down: \"\" },\n        };\n      }\n    }\n    let total = 1;\n    //@ts-ignore\n    const convert = CONFIG.DND5E.currencies;\n    Object.values(convert)\n      .reverse()\n      .forEach((v) => {\n        if (v.conversion !== undefined) {\n          total *= v.conversion.each;\n          if (cpValue[v.conversion.into]) {\n            cpValue[v.conversion.into].value = total;\n          }\n        }\n      });\n    // if (game.settings.get(CONSTANTS.MODULE_NAME, \"ignoreElectrum\")) {\n    // \tcpValue.gp.down = \"sp\";\n    // \tcpValue.sp.up = \"gp\";\n    // \tdelete cpValue.ep;\n    // }\n    return cpValue;\n  }\n  static getDelta(delta, denom) {\n    const cpValue = LazyMoneyHelpers.getCpValue();\n    let newDelta = {};\n    delta *= cpValue[denom].value;\n    for (let key in cpValue) {\n      const myValue = cpValue[key].value;\n      let intDiv = Number(~~(delta / myValue));\n      if (intDiv > 0) {\n        newDelta[key] = intDiv;\n        delta %= myValue;\n      }\n    }\n    return newDelta;\n  }\n  static scaleDown(oldAmount, denom) {\n    const cpValue = LazyMoneyHelpers.getCpValue();\n    const up = cpValue[denom].up;\n    let newAmount = oldAmount;\n    if (newAmount[up] > 0) {\n      newAmount[up] -= 1;\n      newAmount[denom] += ~~(cpValue[up].value / cpValue[denom].value);\n      return newAmount;\n    } else if (newAmount[up] === 0) {\n      newAmount = LazyMoneyHelpers.scaleDown(newAmount, up);\n      LazyMoneyHelpers.scaleDown(newAmount, denom); // TODO i don't remember why i have done this ??\n      return newAmount;\n    } else {\n      return false;\n    }\n  }\n  static addMoney(oldAmount, delta, denom) {\n    const cpValue = LazyMoneyHelpers.getCpValue();\n    let newAmount = {};\n    if (game.settings.get(CONSTANTS.MODULE_ID, \"addConvert\")) {\n      let cpDelta = delta * cpValue[denom].value;\n      for (let key in cpValue) {\n        const myValue = cpValue[key].value;\n        newAmount[key] = oldAmount[key] + ~~(cpDelta / myValue);\n        cpDelta %= myValue;\n      }\n    } else {\n      newAmount[denom] = oldAmount[denom] + delta;\n    }\n    return newAmount;\n  }\n  static removeMoney(oldAmount, delta, denom) {\n    const cpValue = LazyMoneyHelpers.getCpValue();\n    let newAmount = oldAmount;\n    let newDelta = {};\n    let down;\n    if (oldAmount[denom] >= delta) {\n      newAmount[denom] = oldAmount[denom] - delta;\n      return newAmount;\n    } else {\n      newDelta = LazyMoneyHelpers.getDelta(delta, denom);\n      const myValue = cpValue[denom].value;\n      delta = delta * myValue;\n    }\n    if (LazyMoneyHelpers.totalMoney(oldAmount) >= delta) {\n      for (let [key, value] of Object.entries(newDelta)) {\n        if (newAmount[key] >= value) {\n          newAmount[key] -= value;\n        } else if (LazyMoneyHelpers.scaleDown(newAmount, key)) {\n          newAmount[key] -= value;\n        } else {\n          newAmount = oldAmount;\n          while (newAmount[key] <= value && LazyMoneyHelpers.totalMoney(newAmount) > 0 && key !== \"cp\") {\n            down = cpValue[key].down;\n            value -= newAmount[key];\n            newAmount[key] = 0;\n            const myValue = cpValue[key].value;\n            const myDown = cpValue[down].value;\n            value *= ~~(myValue / myDown);\n            key = down;\n          }\n          newAmount[key] -= value;\n        }\n      }\n      return newAmount;\n    } else {\n      return false;\n    }\n  }\n  // TODO old amount is not used ?\n  static updateMoney(oldAmount, delta, denom) {\n    let newAmount = {};\n    newAmount[denom] = delta;\n    return newAmount;\n  }\n  static totalMoney(money) {\n    const cpValue = LazyMoneyHelpers.getCpValue();\n    let total = 0;\n    for (let key in cpValue) {\n      const myValue = cpValue[key].value;\n      total += money[key] * myValue;\n    }\n    return total;\n  }\n\n  /* ============================================== */\n  // https://oatcookies.neocities.org/dndmoney\n\n  static I(str) {\n    return Number.parseInt(str, 10);\n  }\n  static F(str) {\n    return Number.parseFloat(str);\n  }\n  static N(value) {\n    if (Number.isNaN(value)) {\n      return 0;\n    }\n    return value;\n  }\n\n  static recalcItemPriceValue(priceValue, priceDenom) {\n    let copper = 0;\n    let silver = 0;\n    let gold = 0;\n    let electrum = 0;\n    let platinum = 0;\n\n    if (priceDenom === \"cp\") {\n      copper = LazyMoneyHelpers.N(LazyMoneyHelpers.F(priceValue));\n    }\n    if (priceDenom === \"sp\") {\n      silver = LazyMoneyHelpers.N(LazyMoneyHelpers.F(priceValue));\n    }\n    if (priceDenom === \"gp\") {\n      gold = LazyMoneyHelpers.N(LazyMoneyHelpers.F(priceValue));\n    }\n    if (priceDenom === \"ep\") {\n      electrum = LazyMoneyHelpers.N(LazyMoneyHelpers.F(priceValue));\n    }\n    if (priceDenom === \"pp\") {\n      platinum = LazyMoneyHelpers.N(LazyMoneyHelpers.F(priceValue));\n    }\n    const pennies = copper + 10 * silver + 50 * electrum + 100 * gold + 1000 * platinum;\n    return LazyMoneyHelpers.recalc_pennies(pennies);\n  }\n\n  static recalc_pennies(pennies) {\n    // const pennies = N(F(getvalue(\"pennies\")));\n    const copper = pennies % 10;\n    const silver = ((pennies - copper) % 100) / 10;\n    const gold = (pennies - copper - 10 * silver) / 100;\n    const electrum = gold * 2;\n    const platinum = gold / 10;\n    //console.log(copper, silver, gold, pennies, pennies-copper);\n    return {\n      gold: gold,\n      silver: silver,\n      copper: copper,\n      electrum: electrum,\n      platinum: platinum,\n    };\n  }\n}\n","// ================================\n// Logger utility\n// ================================\n\nimport CONSTANTS from \"../constants\";\nimport { LazyMoneyHelpers } from \"../lazymoney-helpers\";\n\n// export let debugEnabled = 0;\n// 0 = none, warnings = 1, debug = 2, all = 3\n\nexport function debug(msg, args = \"\") {\n  if (game.settings.get(CONSTANTS.MODULE_NAME, \"debug\")) {\n    console.log(`DEBUG | ${CONSTANTS.MODULE_NAME} | ${msg}`, args);\n  }\n  return msg;\n}\n\nexport function log(message) {\n  message = `${CONSTANTS.MODULE_NAME} | ${message}`;\n  console.log(message.replace(\"<br>\", \"\\n\"));\n  return message;\n}\n\nexport function notify(message) {\n  message = `${CONSTANTS.MODULE_NAME} | ${message}`;\n  ui.notifications?.notify(message);\n  console.log(message.replace(\"<br>\", \"\\n\"));\n  return message;\n}\n\nexport function info(info, notify = false) {\n  info = `${CONSTANTS.MODULE_NAME} | ${info}`;\n  if (notify) ui.notifications?.info(info);\n  console.log(info.replace(\"<br>\", \"\\n\"));\n  return info;\n}\n\nexport function warn(warning, notify = false) {\n  warning = `${CONSTANTS.MODULE_NAME} | ${warning}`;\n  if (notify) ui.notifications?.warn(warning);\n  console.warn(warning.replace(\"<br>\", \"\\n\"));\n  return warning;\n}\n\nexport function error(error, notify = true) {\n  error = `${CONSTANTS.MODULE_NAME} | ${error}`;\n  if (notify) ui.notifications?.error(error);\n  return new Error(error.replace(\"<br>\", \"\\n\"));\n}\n\nexport function timelog(message) {\n  warn(Date.now(), message);\n}\n\nexport const i18n = (key) => {\n  return game.i18n.localize(key)?.trim();\n};\n\nexport const i18nFormat = (key, data = {}) => {\n  return game.i18n.format(key, data)?.trim();\n};\n\n// export const setDebugLevel = (debugText): void => {\n//   debugEnabled = { none: 0, warn: 1, debug: 2, all: 3 }[debugText] || 0;\n//   // 0 = none, warnings = 1, debug = 2, all = 3\n//   if (debugEnabled >= 3) CONFIG.debug.hooks = true;\n// };\n\nexport function dialogWarning(message, icon = \"fas fa-exclamation-triangle\") {\n  return `<p class=\"${CONSTANTS.MODULE_NAME}-dialog\">\n        <i style=\"font-size:3rem;\" class=\"${icon}\"></i><br><br>\n        <strong style=\"font-size:1.2rem;\">${CONSTANTS.MODULE_NAME}</strong>\n        <br><br>${message}\n    </p>`;\n}\n\n// =========================================================================================\n\nexport function is_real_number(inNumber) {\n  return !isNaN(inNumber) && typeof inNumber === \"number\" && isFinite(inNumber);\n}\n\nexport function isEmptyObject(obj) {\n  // because Object.keys(new Date()).length === 0;\n  // we have to do some additional check\n  if (obj === null || obj === undefined) {\n    return true;\n  }\n  const result =\n    obj && // null and undefined check\n    Object.keys(obj).length === 0; // || Object.getPrototypeOf(obj) === Object.prototype);\n  return result;\n}\n\nexport function is_lazy_number(inNumber) {\n  const isSign =\n    String(inNumber).startsWith(LazyMoneyHelpers.signCase.add) ||\n    String(inNumber).startsWith(LazyMoneyHelpers.signCase.subtract) ||\n    String(inNumber).startsWith(LazyMoneyHelpers.signCase.equals) ||\n    String(inNumber).startsWith(LazyMoneyHelpers.signCase.default);\n  if (isSign) {\n    const withoutFirst = String(inNumber).slice(1);\n    return is_real_number(withoutFirst);\n  } else {\n    return true;\n  }\n}\n\nexport function isLessThanOneIsOne(inNumber) {\n  return inNumber < 1 ? 1 : inNumber;\n}\n\nexport function getDocument(target) {\n  if (stringIsUuid(target)) {\n    target = fromUuidSync(target);\n  }\n  return target?.document ?? target;\n}\n\nexport function getActor(target) {\n  if (stringIsUuid(target)) {\n    target = fromUuidSync(target);\n  }\n  // Type checking\n  if (!(target instanceof CONFIG.Actor.documentClass)) {\n    throw error(`Invalid actor`, true);\n  }\n  return target;\n}\n\nexport function stringIsUuid(inId) {\n  return typeof inId === \"string\" && (inId.match(/\\./g) || []).length && !inId.endsWith(\".\");\n}\n\nexport function getUuid(target) {\n  if (stringIsUuid(target)) {\n    return target;\n  }\n  const document = getDocument(target);\n  return document?.uuid ?? false;\n}\n","import CONSTANTS from \"./constants.js\";\nimport { dialogWarning, i18n, warn } from \"./lib/lib.js\";\n\nexport const registerSettings = function () {\n  game.settings.registerMenu(CONSTANTS.MODULE_NAME, \"resetAllSettings\", {\n    name: `${CONSTANTS.MODULE_NAME}.setting.reset.name`,\n    hint: `${CONSTANTS.MODULE_NAME}.setting.reset.hint`,\n    icon: \"fas fa-coins\",\n    type: ResetSettingsDialog,\n    restricted: true,\n  });\n\n  // =====================================================================\n\n  game.settings.register(CONSTANTS.MODULE_NAME, \"enable\", {\n    name: `${CONSTANTS.MODULE_NAME}.setting.enable.name`,\n    hint: `${CONSTANTS.MODULE_NAME}.setting.enable.hint`,\n    scope: \"client\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  game.settings.register(CONSTANTS.MODULE_NAME, \"addConvert\", {\n    name: `${CONSTANTS.MODULE_NAME}.setting.addConvert.name`,\n    hint: `${CONSTANTS.MODULE_NAME}.setting.addConvert.hint`,\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  game.settings.register(CONSTANTS.MODULE_NAME, \"ignoreElectrum\", {\n    name: `${CONSTANTS.MODULE_NAME}.setting.ignoreElectrum.name`,\n    hint: `${CONSTANTS.MODULE_NAME}.setting.ignoreElectrum.hint`,\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  game.settings.register(CONSTANTS.MODULE_NAME, \"chatLog\", {\n    name: `${CONSTANTS.MODULE_NAME}.setting.chatLog.name`,\n    hint: `${CONSTANTS.MODULE_NAME}.setting.chatLog.hint`,\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  // ========================================================================\n\n  game.settings.register(CONSTANTS.MODULE_NAME, \"debug\", {\n    name: `${CONSTANTS.MODULE_NAME}.setting.debug.name`,\n    hint: `${CONSTANTS.MODULE_NAME}.setting.debug.hint`,\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n};\n\nclass ResetSettingsDialog extends FormApplication {\n  constructor(...args) {\n    //@ts-ignore\n    super(...args);\n    //@ts-ignore\n    return new Dialog({\n      title: game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.title`),\n      content:\n        '<p style=\"margin-bottom:1rem;\">' +\n        game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.content`) +\n        \"</p>\",\n      buttons: {\n        confirm: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.confirm`),\n          callback: async () => {\n            const worldSettings = game.settings.storage\n              ?.get(\"world\")\n              ?.filter((setting) => setting.key.startsWith(`${CONSTANTS.MODULE_NAME}.`));\n            for (let setting of worldSettings) {\n              console.log(`Reset setting '${setting.key}'`);\n              await setting.delete();\n            }\n            //window.location.reload();\n          },\n        },\n        cancel: {\n          icon: '<i class=\"fas fa-times\"></i>',\n          label: game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.cancel`),\n        },\n      },\n      default: \"cancel\",\n    });\n  }\n\n  async _updateObject(event, formData) {\n    // do nothing\n  }\n}\n","import { LazyMoneyHelpers } from \"./lazymoney-helpers\";\n\nconst API = {\n  async manageCurrency(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"addCurrency | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.manageCurrency(\n      inAttributes.actor,\n      inAttributes.currencyValue,\n      inAttributes.currencyDenom\n    );\n  },\n\n  async addCurrency(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"addCurrency | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.addCurrency(\n      inAttributes.actor,\n      inAttributes.currencyValue,\n      inAttributes.currencyDenom\n    );\n  },\n\n  async subtractCurrency(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"subtractCurrency | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.subtractCurrency(\n      inAttributes.actor,\n      inAttributes.currencyValue,\n      inAttributes.currencyDenom\n    );\n  },\n\n  async convertToGold(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"convertToGold| inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.convertToGold(inAttributes.currencyValue, inAttributes.currencyDenom);\n  },\n\n  async convertToSilver(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"convertToSilver | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.convertToSilver(inAttributes.currencyValue, inAttributes.currencyDenom);\n  },\n\n  async convertToCopper(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"convertToCopper | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.convertToCopper(inAttributes.currencyValue, inAttributes.currencyDenom);\n  },\n\n  async convertToElectrum(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"convertToElectrum | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.convertToElectrum(inAttributes.currencyValue, inAttributes.currencyDenom);\n  },\n\n  async convertToPlatinum(inAttributes) {\n    // if (!Array.isArray(inAttributes)) {\n    //   throw error(\"retrieveAndApplyBonuses| inAttributes must be of type array\");\n    // }\n    // const [uuidOrItem] = inAttributes;\n    if (typeof inAttributes !== \"object\") {\n      throw error(\"convertToPlatinum | inAttributes must be of type object\");\n    }\n\n    return await LazyMoneyHelpers.convertToPlatinum(inAttributes.currencyValue, inAttributes.currencyDenom);\n  },\n};\n\nexport default API;\n","import CONSTANTS from \"./constants.js\";\nimport { LazyMoneyHelpers } from \"./lazymoney-helpers.js\";\nimport { debug, info, isEmptyObject, is_lazy_number, is_real_number, log, warn } from \"./lib/lib.js\";\n\nfunction _onChangeCurrency(ev) {\n  const input = ev.target;\n  const actor = ev.data.app.actor;\n  const sheet = ev.data.app.options;\n  let money = ev.data.app.actor.system.currency;\n  money = LazyMoneyHelpers.patchCurrency(money);\n\n  const denom = input.name.split(\".\")[2];\n  const value = input.value;\n  let sign = LazyMoneyHelpers.signCase.default;\n  for (const val of Object.values(LazyMoneyHelpers.signCase)) {\n    if (value.includes(val)) {\n      sign = val;\n      break;\n    }\n  }\n\n  let newAmount = LazyMoneyHelpers.calculateNewAmount(actor, value, denom, sign);\n  flash(input);\n\n  if (Object.keys(newAmount).length > 0) {\n    sheet.submitOnChange = false;\n    actor\n      .update({ \"system.currency\": newAmount })\n      .then(() => {\n        input.value = Number(getProperty(actor, input.name) ?? 0);\n        sheet.submitOnChange = true;\n      })\n      .catch(console.log.bind(console));\n  }\n}\n\nfunction flash(input) {\n  input.style.backgroundColor = \"rgba(255, 0, 0, 0.5)\";\n  setTimeout(() => {\n    input.style.backgroundColor = \"\";\n  }, 150);\n}\n\nexport function applyLazyMoney(app, html, actorData) {\n  if (!game.settings.get(CONSTANTS.MODULE_ID, \"enable\")) {\n    return;\n  }\n  // The module already do the job so for avoid redundance...\n  // if (game.modules.get(\"lazymoney\")?.active) {\n  //   return;\n  // }\n\n  for (const elem of html.find(\"input[name^='system.currency']\")) {\n    elem.type = \"text\";\n    elem.classList.add(\"lazymoney\");\n  }\n  html.find(\"input[name^='system.currency']\").off(\"change\");\n  html.find(\"input[name^='system.currency']\").change(\n    {\n      app: app,\n      data: actorData,\n    },\n    _onChangeCurrency\n  );\n}\n","import API from \"./api.js\";\nimport CONSTANTS from \"./constants.js\";\n// import { applyLazyExp, applyLazyHp } from \"./lazyExpAndHp.js\";\nimport { applyLazyMoney } from \"./lazymoney.js\";\nimport { warn, error, debug, i18nFormat, log } from \"./lib/lib\";\nimport { setApi } from \"../module.js\";\n\nexport const initHooks = () => {};\n\nexport const setupHooks = () => {\n  setApi(API);\n};\n\nexport const readyHooks = async () => {\n  log(\"Initializing lazymoney\");\n  //@ts-ignore\n  Object.keys(CONFIG.Actor.sheetClasses.character).forEach((key) => {\n    let sheet = key.split(\".\")[1];\n    try {\n      Hooks.on(\"render\" + sheet, (app, html, actorData) => {\n        applyLazyMoney(app, html, actorData);\n        // applyLazyExp(app, html, actorData);\n        // applyLazyHp(app, html, actorData);\n      });\n    } catch (error) {\n      warn(\"lazymoney can't hook to \" + key);\n    }\n    // applyLazyMoney(key);\n  });\n  //@ts-ignore\n  Object.keys(CONFIG.Actor.sheetClasses.npc).forEach((key) => {\n    let sheet = key.split(\".\")[1];\n    try {\n      Hooks.on(\"render\" + sheet, (app, html, actorData) => {\n        applyLazyMoney(app, html, actorData);\n        // applyLazyExp(app, html, actorData);\n        // applyLazyHp(app, html, actorData);\n      });\n    } catch (error) {\n      warn(\"lazymoney can't hook to \" + key);\n    }\n    // applyLazyMoney(key);\n  });\n};\n\n// ==========================================\n\n// async function _preUpdateActor(wrapped, update, options, user) {\n//   try {\n//     const hpUpdate = <number>getProperty(update, \"system.attributes.hp.value\");\n//     // await checkAndApply(this, update, options, user);\n//     await zeroHPExpiry(this,  hpUpdate, user);\n//   } catch (err) {\n//     warn(\"preUpdateActor failed \", err)\n//   }\n//   finally {\n//     return wrapped(update, options, user);\n//   }\n// }\n","/**\n * This is your TypeScript entry file for Foundry VTT.\n * Register custom settings, sheets, and constants using the Foundry API.\n * Change this heading to be more descriptive to your module, or remove it.\n * Author: [your name]\n * Content License: [copyright and-or license] If using an existing system\n * \t\t\t\t\tyou may want to put a (link to a) license or copyright\n * \t\t\t\t\tnotice here (e.g. the OGL).\n * Software License: [your license] Put your desired license here, which\n * \t\t\t\t\t determines how others may use and modify your module\n */\n// Import JavaScript modules\n\n// Import TypeScript modules\nimport { registerSettings } from \"./scripts/settings.js\";\nimport { initHooks, readyHooks, setupHooks } from \"./scripts/main.js\";\nimport { error, i18n, warn } from \"./scripts/lib/lib.js\";\nimport CONSTANTS from \"./scripts/constants.js\";\nimport API from \"./scripts/api.js\";\n\n/* ------------------------------------ */\n/* Initialize module\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"init\", async () => {\n  // log(`${CONSTANTS.MODULE_NAME} | Initializing ${CONSTANTS.MODULE_NAME}`);\n\n  // Register custom module settings\n  registerSettings();\n  initHooks();\n\n  // Preload Handlebars templates\n  //await preloadTemplates();\n});\n\n/* ------------------------------------ */\n/* Setup module\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"setup\", function () {\n  // Do anything after initialization but before ready\n  setupHooks();\n});\n\n/* ------------------------------------ */\n/* When ready\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"ready\", async () => {\n  // Do anything once the module is ready\n  // if (!game.modules.get('lib-wrapper')?.active && game.user?.isGM) {\n  //   let word = 'install and activate';\n  //   if (game.modules.get('lib-wrapper')) word = 'activate';\n  //   throw error(`Requires the 'libWrapper' module. Please ${word} it.`);\n  // }\n  // if (!game.modules.get('socketLib')?.active && game.user?.isGM) {\n  //   let word = 'install and activate';\n  //   if (game.modules.get('socketLib')) word = 'activate';\n  //   throw error(`Requires the 'socketLib' module. Please ${word} it.`);\n  // }\n  readyHooks();\n});\n\n/* ------------------------------------ */\n/* Other Hooks\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\n\nHooks.once(\"devModeReady\", ({ registerPackageDebugFlag }) => {\n  registerPackageDebugFlag(CONSTANTS.MODULE_NAME);\n});\n\n/**\n * Initialization helper, to set API.\n * @param api to set to game module.\n */\nexport function setApi(api) {\n  const data = game.modules.get(CONSTANTS.MODULE_NAME);\n  data.api = api;\n}\n\n/**\n * Returns the set API.\n * @returns Api from games module.\n */\nexport function getApi() {\n  const data = game.modules.get(CONSTANTS.MODULE_NAME);\n  return data.api;\n}\n\n/**\n * Initialization helper, to set Socket.\n * @param socket to set to game module.\n */\nexport function setSocket(socket) {\n  const data = game.modules.get(CONSTANTS.MODULE_NAME);\n  data.socket = socket;\n}\n\n/*\n * Returns the set socket.\n * @returns Socket from games module.\n */\nexport function getSocket() {\n  const data = game.modules.get(CONSTANTS.MODULE_NAME);\n  return data.socket;\n}\n"],"names":["value","info","error"],"mappings":"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"}